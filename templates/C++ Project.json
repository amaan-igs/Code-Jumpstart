{
    "folderStructure": {
      ".vscode/": ["extensions.json"],
      "src/": ["main.cpp", "utils.cpp", "utils.h"],
      "include/": ["utils.h"]
    },
    "files": {
      ".gitignore": "# This code was autogenerated using CodeJumpstart\n\nbuild/\n*.o\n*.exe\n",
      "Makefile": "CC = g++\nCFLAGS = -Wall\n\nall: main\n\nmain: src/main.o src/utils.o\n\t$(CC) -o main src/main.o src/utils.o\n\nsrc/main.o: src/main.cpp include/utils.h\n\t$(CC) $(CFLAGS) -c src/main.cpp -o src/main.o\n\nsrc/utils.o: src/utils.cpp include/utils.h\n\t$(CC) $(CFLAGS) -c src/utils.cpp -o src/utils.o\n\nclean:\n\trm -rf *.o main",
      "CMakeLists.txt": "cmake_minimum_required(VERSION 3.10)\nproject(CodeJumpstart_Cpp)\n\nset(CMAKE_CXX_STANDARD 14)\n\ninclude_directories(include)\n\nadd_executable(main src/main.cpp src/utils.cpp)",
      "README.md": "# CodeJumpstart C++ Boilerplate\n\nThis project was initialized using CodeJumpstart. Fuel your projects, one setup at a time.\n\n## Structure\n- `src/`: Source files\n- `include/`: Header files\n- `.vscode/`: VSCode configuration\n\n## How to Build\n1. Run `make` to compile.\n2. Run the binary using `./main`.\n\n---\n**Autogenerated by CodeJumpstart.**\n\nCreated by [Amaan Ul Haq Siddiqui](https://www.linkedin.com/in/amaanulhaqsiddiqui/).\n",
      "src/main.cpp": "// This code was autogenerated using CodeJumpstart\n\n#include <iostream>\n#include \"utils.h\"\n\nint main() {\n    std::cout << \"Hello from CodeJumpstart!\" << std::endl;\n    return 0;\n}",
      "src/utils.cpp": "// This code was autogenerated using CodeJumpstart\n\n#include \"utils.h\"\n\nvoid helperFunction() {\n    // Placeholder for utility code\n}",
      "src/utils.h": "// This code was autogenerated using CodeJumpstart\n\n#ifndef UTILS_H\n#define UTILS_H\n\nvoid helperFunction();\n\n#endif"
    }
  }
  